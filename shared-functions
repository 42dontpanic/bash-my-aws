#!/bin/bash

if [[ -z ${BMA_OUTPUT} ]]; then
  BMA_OUTPUT="text"
fi

if [[ -z ${INSTANCE_OUTPUT} ]]; then
  INSTANCE_OUTPUT="[
    InstanceId,
    State.Name,
    InstanceType,
    PrivateIpAddress,
    PublicIpAddress,
    join(\` \`, [Tags[?Key==\`Name\`].Value][]),
    join(\` \`, [Tags[?Key==\`contact\`].Value][]),
    LaunchTime
  ]"
fi

if [[ -z ${VOLUME_OUTPUT} ]]; then
  VOLUME_OUTPUT='[VolumeId, Size, VolumeType, State, CreateTime]'
fi

if [[ -z ${INSTANCE_OUTPUT} ]]; then
  INSTANCE_PROFILE_OUTPUT="[
    Profile
  ]"
fi

if [[ -z ${ELB_OUTPUT} ]]; then
  ELB_OUTPUT="[
    LoadBalancerName
  ]"
fi

if [[ -z ${ASG_OUTPUT} ]]; then
  ASG_OUTPUT="[
    AutoScalingGroupName
  ]"
fi

__bma_read_inputs() {
  # echo "${FUNCNAME}: \$@='${@}'" >&2
  if [[ -t 0 ]]; then
    # STDIN is a terminal
    echo $@
  else
    __bma_read_stdin     |
      sed "s/.$/& /"     |
      sed "s/$/$@/"      |
      tr '\n' ' '        |
      sed -E "s/\ +/ /"  |
      sed -E "s/\ +$//"
  fi
}

__bma_read_stdin() {
  [[ -t 0 ]] ||
    cat /dev/stdin     |
    awk '{ print $1 }' |
    tr '\n' ' '        |
    sed 's/\ $//'
}

__bma_switch_with() {
  # USAGE:  echo one two three | __bma_apply_switch --the-switch
  # OUTPUT: --the-switch one --the-switch two --the-switch three
  [[ -t 0 ]] && return 0
  [[ -z $1 ]] && return 1
  for stdin in $(cat /dev/stdin); do
    echo -n "$1 $stdin "
  done
  echo
}

__bma_clean_query() {
  __bma_read_inputs "$@" | tr -d '[:blank:]\n'
}

# vim: ft=sh
